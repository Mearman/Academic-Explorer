import React from 'react';\nimport { EntityBadge, MetricDisplay, ExternalLink } from '@/components';\nimport type { Work } from '@/lib/openalex/types';\nimport * as styles from '../../organisms/search-results.css';\n\ninterface SearchResultItemProps {\n  work: Work;\n  onClick: (work: Work) => void;\n}\n\nexport function SearchResultItem({ work, onClick }: SearchResultItemProps) {\n  return (\n    <div \n      className={styles.resultItem}\n      onClick={() => onClick(work)}\n    >\n      <div className={styles.resultHeader}>\n        <h3 className={styles.resultTitle}>\n          {work.title}\n        </h3>\n        <div className={styles.resultMeta}>\n          <EntityBadge entityType=\"work\" />\n          {work.publication_year && (\n            <span className={styles.year}>\n              {work.publication_year}\n            </span>\n          )}\n          {work.open_access?.is_oa && (\n            <span className={styles.openAccess}>\n              Open Access\n            </span>\n          )}\n        </div>\n      </div>\n\n      {work.authorships && work.authorships.length > 0 && (\n        <div className={styles.authors}>\n          <span className={styles.authorsLabel}>Authors:</span>\n          <span className={styles.authorsList}>\n            {work.authorships\n              .slice(0, 3)\n              .map(auth => auth.author?.display_name)\n              .filter(Boolean)\n              .join(', ')}\n            {work.authorships.length > 3 && ` and ${work.authorships.length - 3} more`}\n          </span>\n        </div>\n      )}\n\n      {work.primary_location?.source?.display_name && (\n        <div className={styles.venue}>\n          <span className={styles.venueLabel}>Published in:</span>\n          <span className={styles.venueName}>\n            {work.primary_location.source.display_name}\n          </span>\n        </div>\n      )}\n\n      <div className={styles.metrics}>\n        <MetricDisplay \n          label=\"Citations\"\n          value={work.cited_by_count || 0}\n          variant=\"default\"\n        />\n        \n        {work.concepts && work.concepts.length > 0 && (\n          <div className={styles.concepts}>\n            {work.concepts\n              .slice(0, 3)\n              .map((concept) => (\n                <EntityBadge\n                  key={concept.id}\n                  entityType=\"concept\"\n                  size=\"sm\"\n                >\n                  {concept.display_name}\n                </EntityBadge>\n              ))}\n          </div>\n        )}\n      </div>\n\n      {work.doi && (\n        <div className={styles.links}>\n          <ExternalLink href={`https://doi.org/${work.doi}`} type=\"doi\">\n            DOI: {work.doi}\n          </ExternalLink>\n        </div>\n      )}\n\n      {work.abstract_inverted_index && (\n        <div className={styles.abstract}>\n          <details>\n            <summary className={styles.abstractToggle}>\n              Show Abstract\n            </summary>\n            <div className={styles.abstractContent}>\n              {/* We'll need to reconstruct the abstract from inverted index */}\n              Abstract available (click to view full paper)\n            </div>\n          </details>\n        </div>\n      )}\n    </div>\n  );\n}