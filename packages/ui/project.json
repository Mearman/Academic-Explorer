{
  "name": "ui",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/ui/src",
  "projectType": "library",
  "targets": {
    "build": {
      "executor": "nx:run-commands",
      "dependsOn": ["types:build", "client:build", "graph:build", "^build"],
      "options": {
        "command": "vite build",
        "cwd": "{projectRoot}"
      },
      "inputs": [
        "production",
        "^production",
        "{workspaceRoot}/vite.config.base.ts",
        "{workspaceRoot}/config/**/*"
      ],
      "outputs": ["{projectRoot}/dist"],
      "cache": true
    },

    "test": {
      "executor": "nx:run-commands",
      "options": {
        "command": "vitest run",
        "cwd": "{projectRoot}"
      },
      "inputs": [
        "default",
        "^production",
        "{workspaceRoot}/vite.config.base.ts",
        "{projectRoot}/vite.config.ts",
        "{projectRoot}/vitest.config.ts"
      ],
      "outputs": ["{projectRoot}/coverage"],
      "cache": true
    },
    "test:watch": "test:watch",
    "clean": "clean",
    "dev": "dev:lib",
    "storybook": {
      "executor": "nx:run-commands",
      "options": {
        "command": "storybook dev -p 6006",
        "cwd": "{projectRoot}"
      },
      "cache": false
    },
    "build-storybook": {
      "executor": "nx:run-commands",
      "dependsOn": ["build"],
      "options": {
        "command": "storybook build",
        "cwd": "{projectRoot}"
      },
      "outputs": ["{projectRoot}/storybook-static"],
      "cache": true
    },
    "validate": {
      "cache": true,
      "dependsOn": ["build", "test", "lint"],
      "inputs": [
        "production",
        "{projectRoot}/tsconfig.json",
        "{projectRoot}/package.json",
        "source",
        "tests",
        "configs",
        "{workspaceRoot}/eslint.config.ts",
        "{workspaceRoot}/eslint.config.*.ts"
      ],
      "outputs": []
    },
    "lint": {
      "options": {
        "command": "NODE_OPTIONS='--import tsx' eslint --no-warn-ignored src/**/*.{ts,tsx} --fix"
      }
    }
  },
  "tags": ["type:library", "scope:ui", "layer:ui"]
}
