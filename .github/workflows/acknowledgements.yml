name: Update Acknowledgements

on:
  # Run on dependency changes
  push:
    paths:
      - 'package.json'
      - 'pnpm-lock.yaml'
    branches: [ main, develop ]

  # Allow manual triggering
  workflow_dispatch:

  # Weekly automated check
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM UTC

env:
  NODE_VERSION: 20.x
  PNPM_VERSION: 9

jobs:
  update-acknowledgements:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 2

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for problematic licenses
        run: |
          echo "Checking for licenses that require review..."
          pnpm licenses:check || {
            echo "❌ Found licenses that require review. Check the output above."
            echo "Consider replacing packages with problematic licenses or adding them to the allowed list if appropriate."
            exit 1
          }

      - name: Generate acknowledgements
        run: |
          echo "Generating acknowledgements for production dependencies..."
          pnpm licenses:generate

          # Add header and metadata
          cat > temp_ack.md << 'EOF'
          # Third-Party Acknowledgements

          This document acknowledges the third-party packages used in this project and their licenses.

          **Generated on:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          **Dependencies analyzed:** Production dependencies only
          **Last updated:** Commit $(git rev-parse --short HEAD)

          ---

          EOF

          cat ACKNOWLEDGEMENTS.md >> temp_ack.md
          mv temp_ack.md ACKNOWLEDGEMENTS.md

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet ACKNOWLEDGEMENTS.md; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes in acknowledgements"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in acknowledgements"

            # Show what changed
            echo "Changes:"
            git diff --no-color ACKNOWLEDGEMENTS.md | head -20
          fi

      - name: Configure git
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit acknowledgements
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git add ACKNOWLEDGEMENTS.md

          # Create descriptive commit message
          COMMIT_MSG="chore(deps): update third-party acknowledgements

          - Updated acknowledgements for production dependencies
          - Generated from $(git log -1 --pretty=format:'%s' HEAD)
          - Analysis timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')

          [skip ci]"

          git commit -m "$COMMIT_MSG"

      - name: Push changes to current branch
        if: steps.check-changes.outputs.changes == 'true' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        run: |
          git push origin ${{ github.ref_name }}

      - name: Create pull request for other branches
        if: steps.check-changes.outputs.changes == 'true' && github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(deps): update third-party acknowledgements"
          title: "🔄 Update Third-Party Acknowledgements"
          body: |
            ## 📋 Acknowledgements Update

            This PR updates the third-party acknowledgements file based on current production dependencies.

            ### Changes
            - ✅ Scanned production dependencies only
            - ✅ Excluded private packages
            - ✅ Verified license compatibility
            - 🕒 Generated on: ${{ github.event_name == 'schedule' && 'scheduled run' || 'dependency change trigger' }}

            ### License Status
            All included packages use approved licenses (MIT, Apache-2.0, BSD, ISC, etc.)

            ---
            *This PR was automatically generated by the acknowledgements workflow.*
          branch: update-acknowledgements
          delete-branch: true

      - name: Add job summary
        if: always()
        run: |
          echo "## 📋 Acknowledgements Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check-changes.outputs.changes }}" == "true" ]; then
            echo "✅ **Changes detected and committed**" >> $GITHUB_STEP_SUMMARY
            echo "- Updated ACKNOWLEDGEMENTS.md with current dependencies" >> $GITHUB_STEP_SUMMARY
            echo "- All licenses passed compatibility check" >> $GITHUB_STEP_SUMMARY

            if [ "${{ github.ref }}" == "refs/heads/main" ] || [ "${{ github.ref }}" == "refs/heads/develop" ]; then
              echo "- Changes pushed directly to ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
            else
              echo "- Created pull request for review" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "ℹ️ **No changes needed**" >> $GITHUB_STEP_SUMMARY
            echo "- Acknowledgements are up to date" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY