{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "tui": {
    "enabled": false,
    "autoExit": true
  },
  "useDaemonProcess": false,
  "daemon": {
    "options": {
      "shutdownTimeoutMs": 10000,
      "heartbeatIntervalMs": 60000,
      "processExitTimeoutMs": 15000,
      "cleanupOnProcessExit": true,
      "maxMemoryUsage": "512MB"
    }
  },
  "workspaceLayout": {
    "appsDir": "apps",
    "libsDir": "packages"
  },
  "plugins": [
    {
      "plugin": "@nx/js",
      "options": {
        "buildTargetName": "build",
        "testTargetName": "test"
      }
    },
    {
      "plugin": "@nx/react",
      "options": {
        "bundler": "vite"
      }
    },
    {
      "plugin": "@nx/vite/plugin",
      "options": {
        "buildTargetName": "build",
        "previewTargetName": "preview",
        "serveTargetName": "serve",
        "testTargetName": "test"
      }
    },
    {
      "plugin": "@nx/eslint/plugin",
      "options": {
        "targetName": "lint"
      }
    },
    {
      "plugin": "@nx/storybook/plugin",
      "options": {
        "serveTargetName": "storybook",
        "buildTargetName": "build-storybook",
        "testTargetName": "test-storybook"
      }
    }
  ],
  "namedTargets": {
    "build:lib": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsc -b",
        "cwd": "{projectRoot}"
      },
      "inputs": [
        "production",
        "^production",
        "^outputs",
        "{workspaceRoot}/vite.config.base.ts",
        "{workspaceRoot}/config/**/*"
      ],
      "outputs": [
        "{projectRoot}/dist"
      ],
      "cache": true
    },
    "build:compile": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsc -b",
        "cwd": "{projectRoot}"
      },
      "inputs": [
        "production",
        "^production",
        "^outputs",
        "{workspaceRoot}/vite.config.base.ts",
        "{workspaceRoot}/config/**/*"
      ],
      "outputs": [
        "{projectRoot}/dist"
      ],
      "cache": true
    },
    "build:ui": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "tsc --emitDeclarationOnly",
          "vite build"
        ],
        "cwd": "{projectRoot}"
      },
      "inputs": [
        "production",
        "^production",
        "{workspaceRoot}/vite.config.base.ts",
        "{workspaceRoot}/config/**/*"
      ],
      "outputs": [
        "{projectRoot}/dist"
      ],
      "cache": true
    },
    "dev:lib": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsc -b --watch",
        "cwd": "{projectRoot}"
      },
      "cache": false
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "options": {
        "lintFilePatterns": [
          "{sourceRoot}/**/*.{ts,tsx}"
        ]
      },
      "inputs": [
        "source",
        "configs",
        "{workspaceRoot}/eslint.config.ts",
        "{workspaceRoot}/eslint.config.*.ts"
      ],
      "outputs": [
        "{workspaceRoot}/.nx/cache/lint-results/{projectName}.json"
      ],
      "cache": true
    },
    "lint:fix": {
      "executor": "@nx/eslint:lint",
      "options": {
        "lintFilePatterns": [
          "{sourceRoot}/**/*.{ts,tsx}"
        ],
        "fix": true
      },
      "inputs": [
        "source",
        "configs",
        "{workspaceRoot}/eslint.config.ts",
        "{workspaceRoot}/eslint.config.*.ts"
      ],
      "outputs": [
        "{projectRoot}/**/*.{js,jsx,ts,tsx}"
      ],
      "cache": true
    },
    "test:aggregate": {
      "executor": "nx:run-commands",
      "dependsOn": [
        "test:unit"
      ],
      "options": {
        "command": "echo 'All tests completed successfully'",
        "cwd": "{projectRoot}"
      },
      "inputs": [
        "default",
        "^production",
        "{workspaceRoot}/vite.config.base.ts",
        "{projectRoot}/vitest.config.ts"
      ],
      "outputs": [
        "{projectRoot}/coverage"
      ],
      "cache": true
    },
    "typecheck": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsc --noEmit",
        "cwd": "{projectRoot}"
      },
      "inputs": [
        "source",
        "configs",
        "^production",
        "{workspaceRoot}/tsconfig*.json",
        "{workspaceRoot}/config/**/*"
      ],
      "outputs": [
        "{projectRoot}/dist/tsc"
      ],
      "cache": true
    }
  },
  "targetDefaults": {
    "build": {
      "cache": true,
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "production",
        "^production",
        "{workspaceRoot}/tsconfig.base.json",
        "{workspaceRoot}/vite.config.base.ts",
        "{workspaceRoot}/vitest.config.base.ts",
        "{projectRoot}/tsconfig.json",
        "{projectRoot}/vite.config.ts"
      ],
      "outputs": [
        "{projectRoot}/dist"
      ]
    },
    "serve": {
      "cache": false
    },
    "preview": {
      "cache": true,
      "dependsOn": [
        "build"
      ]
    },
    "test": {
      "cache": true,
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "default",
        "^production",
        "{workspaceRoot}/vitest.config.base.ts",
        "{projectRoot}/vitest.config.ts",
        "{projectRoot}/src/test/**/*",
        "{projectRoot}/src/**/*.test.{ts,tsx}",
        "{projectRoot}/src/**/*.spec.{ts,tsx}"
      ],
      "outputs": [
        "{projectRoot}/coverage",
        "{workspaceRoot}/coverage/{projectRoot}"
      ]
    },
    "dev": {
      "cache": false,
      "dependsOn": [
        "^build"
      ]
    },
    "e2e": {
      "cache": true,
      "dependsOn": [
        "^build"
      ]
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "cache": true,
      "options": {
        "lintFilePatterns": [
          "{sourceRoot}/**/*.{ts,tsx,js,jsx}"
        ]
      },
      "inputs": [
        "source",
        "configs",
        "{workspaceRoot}/eslint.config.ts",
        "{workspaceRoot}/eslint.config.*.ts",
        "{workspaceRoot}/eslint-rules/**/*",
        "{workspaceRoot}/package.json",
        "{workspaceRoot}/tsconfig.base.json"
      ],
      "outputs": [
        "{options.outputFile}"
      ]
    },
    "typecheck": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsc --noEmit",
        "cwd": "{projectRoot}"
      },
      "inputs": [
        "source",
        "configs",
        "^production",
        "{workspaceRoot}/tsconfig*.json",
        "{workspaceRoot}/config/**/*"
      ],
      "cache": true
    },
    "format": {
      "cache": true
    },
    "update": {
      "cache": true,
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "default",
        "^production",
        "workspace"
      ]
    },
    "extract": {
      "cache": true,
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "default",
        "^production",
        "workspace"
      ]
    },
    "test:unit": {
      "cache": true,
      "dependsOn": [],
      "inputs": [
        "default",
        "^production"
      ],
      "outputs": [
        "{workspaceRoot}/coverage/{projectRoot}/unit"
      ]
    },
    "test:component": {
      "cache": true,
      "dependsOn": [
        "test:unit"
      ],
      "inputs": [
        "default",
        "^production"
      ],
      "outputs": [
        "{workspaceRoot}/coverage/{projectRoot}/component"
      ]
    },
    "test:integration": {
      "cache": true,
      "dependsOn": [
        "test:unit"
      ],
      "inputs": [
        "default",
        "^production"
      ],
      "outputs": [
        "{workspaceRoot}/coverage/{projectRoot}/integration"
      ]
    },
    "validate": {
      "cache": true,
      "dependsOn": [
        "typecheck",
        "lint",
        "test",
        "build"
      ],
      "inputs": [
        "default",
        "^production"
      ],
      "outputs": []
    },
    "clean": {
      "cache": false,
      "inputs": [],
      "outputs": []
    },
    "coverage:report": {
      "cache": false,
      "dependsOn": [
        "test"
      ],
      "inputs": [
        "default",
        "^production"
      ],
      "outputs": [
        "{workspaceRoot}/coverage"
      ]
    },
    "knip": {
      "cache": true,
      "inputs": [
        "source",
        "configs",
        "^production",
        "{workspaceRoot}/knip.ts",
        "{workspaceRoot}/tsconfig*.json",
        "{workspaceRoot}/package.json"
      ],
      "outputs": []
    },
    "knip:nx": {
      "cache": true,
      "inputs": [
        "source",
        "configs",
        "^production",
        "{workspaceRoot}/knip.ts",
        "{workspaceRoot}/tsconfig*.json",
        "{workspaceRoot}/package.json",
        "{workspaceRoot}/tools/scripts/knip-nx.ts"
      ],
      "outputs": []
    },
    "knip:fix": {
      "cache": false,
      "inputs": [
        "source",
        "configs",
        "^production",
        "{workspaceRoot}/knip.ts",
        "{workspaceRoot}/tsconfig*.json",
        "{workspaceRoot}/package.json"
      ],
      "outputs": [
        "{projectRoot}/**/*.{js,jsx,ts,tsx}"
      ]
    },
    "a11y:test": {
      "cache": false,
      "dependsOn": [
        "build"
      ],
      "inputs": [
        "^production",
        "{workspaceRoot}/.pa11yci.json",
        "{projectRoot}/dist/**/*"
      ]
    },
    "a11y:lighthouse": {
      "cache": false,
      "dependsOn": [
        "build"
      ],
      "inputs": [
        "^production",
        "{workspaceRoot}/.lighthouserc.js",
        "{projectRoot}/dist/**/*"
      ]
    },
    "a11y:dev": {
      "cache": false,
      "inputs": [
        "source",
        "configs",
        "{workspaceRoot}/.pa11yci-dev.json"
      ]
    },
    "a11y:ci": {
      "cache": false,
      "dependsOn": [
        "a11y:test",
        "a11y:lighthouse"
      ],
      "inputs": []
    },
    "test:a11y": {
      "cache": true,
      "inputs": [
        "source",
        "tests",
        "configs",
        "^production",
        "{workspaceRoot}/config/**/*"
      ],
      "outputs": [
        "{projectRoot}/coverage"
      ]
    },
    "test:a11y:e2e": {
      "cache": true,
      "dependsOn": [
        "build"
      ],
      "inputs": [
        "source",
        "tests",
        "configs",
        "^production",
        "{workspaceRoot}/config/**/*",
        "{workspaceRoot}/playwright.config.ts"
      ],
      "outputs": [
        "{projectRoot}/coverage"
      ]
    },
    "verify:a11y": {
      "cache": true,
      "dependsOn": [
        "lint",
        "test:a11y",
        "a11y:ci"
      ],
      "inputs": [],
      "outputs": []
    },
    "build-storybook": {
      "cache": true
    }
  },
  "namedInputs": {
    "default": [
      "{projectRoot}/**/*",
      "sharedGlobals"
    ],
    "source": [
      "{projectRoot}/src/**/*",
      "sharedGlobals"
    ],
    "tests": [
      "{projectRoot}/**/*.{spec,test}.{js,jsx,ts,tsx}",
      "{projectRoot}/**/*.snap",
      "{projectRoot}/vitest.config.{js,ts}",
      "{projectRoot}/playwright.config.{js,ts}",
      "{projectRoot}/tsconfig.spec.json",
      "{projectRoot}/src/test-setup.{js,ts}",
      "{projectRoot}/test-setup.{js,ts}",
      "sharedGlobals"
    ],
    "configs": [
      "{projectRoot}/tsconfig*.json",
      "{projectRoot}/package.json",
      "{projectRoot}/eslint.config.{js,ts}",
      "{projectRoot}/vite.config.{js,ts}",
      "sharedGlobals"
    ],
    "production": [
      "source",
      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
      "!{projectRoot}/tsconfig.spec.json",
      "!{projectRoot}/jest.config.[jt]s",
      "!{projectRoot}/src/test-setup.[jt]s",
      "!{projectRoot}/test-setup.[jt]s",
      "!{projectRoot}/.eslintrc.json",
      "!{projectRoot}/eslint.config.js",
      "!{projectRoot}/coverage/**/*",
      "!{projectRoot}/.nx/**/*",
      "!{projectRoot}/node_modules/**/*"
    ],
    "sharedGlobals": [
      "{workspaceRoot}/pnpm-lock.yaml",
      "{workspaceRoot}/package.json",
      "{workspaceRoot}/nx.json",
      "{workspaceRoot}/tsconfig.base.json",
      "{workspaceRoot}/.npmrc"
    ]
  },
  "generators": {
    "@nx/react": {
      "application": {
        "bundler": "vite",
        "style": "css",
        "linter": "eslint",
        "unitTestRunner": "vitest"
      },
      "component": {
        "style": "css"
      },
      "library": {
        "bundler": "vite",
        "unitTestRunner": "vitest",
        "linter": "eslint"
      },
      "@academic-explorer/generators:library": {
        "type": "utility",
        "unitTestRunner": "vitest",
        "bundler": "tsc",
        "description": "A new library package"
      },
      "@academic-explorer/generators:component": {
        "skipTests": false,
        "skipStorybook": false,
        "export": true,
        "styled": true,
        "withHooks": false,
        "withTypes": false
      },
      "@academic-explorer/generators:entity-view": {
        "project": "web",
        "withMocks": true,
        "withIntegration": true,
        "withE2E": true,
        "withLazyLoading": true,
        "withErrorHandling": true,
        "skipTests": false
      }
    }
  },
  "tasksRunnerOptions": {
    "default": {
      "options": {
        "runtimeCacheInputs": [
          "node -v",
          "pnpm -v"
        ],
        "processTimeout": 600000,
        "lifeCycle": {
          "onProcessSignal": "cleanup",
          "onExit": "cleanup"
        }
      }
    }
  },
  "defaultProject": "web",
  "release": {
    "projects": ["packages/*", "apps/*"],
    "version": {
      "conventionalCommits": true
    }
  },
  "cli": {
    "packageManager": "pnpm"
  },
  "parallel": 3,
  "cacheDirectory": ".nx/cache",
  "maxCacheSize": "15GB",
  "compression": true,
  "defaultIteration": "prod",
  "flaky": [],
  "parallelTasks": 3,
  "taskDependencies": {
    "build": [
      {
        "target": "^build"
      }
    ],
    "test": [
      {
        "target": "build",
        "projects": "self"
      }
    ]
  }
}
