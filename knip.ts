import type { KnipConfig } from 'knip';

/**
 * Knip configuration for Academic Explorer monorepo
 *
 * Simplified configuration focusing on core unused file/dependency detection
 * without complex plugin configurations that may have path issues.
 */
const config: KnipConfig = {
  ignore: [
    // Test utilities and helpers (intentionally exported for reuse)
    "**/__tests__/utils/**",
    "**/__tests__/mocks/**",
    "**/test-*.ts",
    "**/*.test-helpers.ts",
    // Library exports (used by external consumers)
    "packages/*/src/index.ts",
    "packages/*/src/**/index.ts",
    // Package.json files with library entries
    "packages/*/package.json",
    // Test setup files referenced in vitest config
    "apps/web/src/test/setup.ts",
    "apps/web/src/test/component-setup.ts",
    "apps/web/src/test/e2e-setup.ts"
  ],
  ignoreExportsUsedInFile: true,
  workspaces: {
    // Root workspace - scripts and configs
    ".": {
      entry: [
        "tools/scripts/*.{ts,js}",
        "config/shared.ts",
        "config/vite-plugins/static-data-index.ts",
        "vite.config.ts",
        "nx.json"
      ],
      project: [
        "tools/scripts/**/*.{ts,js}",
        "config/**/*.ts",
        "*.{ts,js}"
      ]
    },

    // Web application
    "apps/web": {
      entry: [
        "src/main.tsx",
        "src/test/setup.ts",
        "src/test/component-setup.ts",
        "src/test/e2e-setup.ts",
        "src/test/msw/server.ts",
        "src/test/msw/handlers.ts",
        "src/build-plugins/openalex-data-plugin.ts",
        "src/stores/data-fetching-progress-store.ts"
      ],
      project: [
        "src/**/*.{ts,tsx}"
      ],
      ignore: [
        "src/routeTree.gen.ts", // Generated by TanStack Router
        "src/**/*.{test,spec}.{ts,tsx}",
        "e2e/**/*"
      ]
    },

    // CLI application
    "apps/cli": {
      entry: [
        "src/simple-cli.ts"
      ],
      project: [
        "src/**/*.ts"
      ],
      ignore: [
        "src/**/*.{test,spec}.ts"
      ]
    },

    // Graph package
    "packages/graph": {
      project: [
        "src/**/*.ts"
      ]
    },

    // Simulation package
    "packages/simulation": {
      project: [
        "src/**/*.ts"
      ]
    },

    // OpenAlex client package
    "packages/client": {
      project: [
        "src/**/*.ts"
      ]
    },

    // UI components package
    "packages/ui": {
      entry: [
        "src/test/setup.ts"
      ],
      project: [
        "src/**/*.{ts,tsx}"
      ],
      ignore: [
        "src/**/*.stories.{ts,tsx}", // Storybook stories
        "src/**/*.{test,spec}.{ts,tsx}"
      ]
    },

    // Shared utilities package
    "packages/utils": {
      project: [
        "src/**/*.ts"
      ]
    }
  },

  // Global ignore patterns
  ignore: [
    "**/dist/**",
    "**/coverage/**",
    "**/.nx/**",
    "**/node_modules/**",
    "**/.tmp/**",
    "**/.cache/**",
    ".github/**", // GitHub workflows contain complex YAML that can confuse knip
    ".github/workflows/**"
  ],

  // Ignore dependencies that are used but not detected correctly
  ignoreDependencies: [
    "@vanilla-extract/vite-plugin", // Used in vite.config.ts but knip doesn't detect it properly
    "@mantine/notifications", // Optional peerDependency for UI components
    // Module resolution dependencies added for runtime and test environments
    "@types/d3-force", // Type definitions for d3-force used in graph visualizations
    "@types/d3-random", // Type definitions for d3-random used in force simulations
    "@types/lodash-es", // Type definitions for lodash-es utility functions
    "d3-force", // Force simulation library used in graph components
    "d3-random", // Random number generation for deterministic layouts
    "idb", // IndexedDB wrapper used for browser storage
    "lodash-es" // ES module utilities used across applications
  ],

  // Plugin configurations
  eslint: {
    config: [
      "eslint.config.base.ts",
      "eslint.config.react.ts",
      "apps/*/eslint.config.ts",
      "packages/*/eslint.config.ts"
    ]
  },
  vitest: {
    config: [
      "vitest.config.base.ts",
      "vitest.config.react.ts",
      "apps/*/vitest.config.ts",
      "packages/*/vitest.config.ts"
    ]
  },

  // Still disabled due to path issues
  vite: false,
  playwright: false
};

export default config;